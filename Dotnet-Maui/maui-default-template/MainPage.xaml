<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="maui_default_template.MainPage">
    <!-- 
        Inhalt unserer ersten Seite mit etwas Beispiel-Inhalt.
        Eine Scrollview dient hier als "Wrapper" für alle Inhalte auf der Seite.
            Das sorgt dafür, dass die Inhalte auch auf kleinen Bildschirmen oder
            Fenstergrößen angezeigt werden können. Versuche selbst das App-Fenster
            so klein wie möglich zu machen und "Scrolle" nach unten.
        Need-To-Know: Eine ContentPage kann immer nur ein Element im
            Top-Level haben. Dieses Element (idr. ein "Layout") kann mehrere
            Kind-Elemente beinhalten.
    -->
    <ScrollView>
        <!-- 
            Layouts ermögliches es mehrere Kind-Elemente relativ voneinander,
            oder absolut in relation zum Fenster, zu positionieren.
            Die Nützlichen davon sind -> Vertical- und HorizontalStackLayout
                                      -> FlexLayout (HTML-Flexbox-basierend)
                                      -> Grid Layout
        -->
        <VerticalStackLayout
            Padding="30,0"
            Spacing="25">
            <!-- 
                Bilder werden durch das Ressource-Dictionary in App.xaml
                    MAUI handelt für uns das paketieren der "Assets".
                Elemente in MAUI haben ein "HightRequest" und "WidthRequest"
                    Attribut, mit denen  wir die größe von Elementen definieren können
                SemanticProperties sind für Accesibility-Optionen eg. Screenreader,
                    ähnlich zu HTML aria Attributen
            -->
            <Image
                Source="dotnet_bot.png"
                HeightRequest="200"
                Aspect="AspectFit"
                SemanticProperties.Description="dot net bot in a hovercraft number nine" />
            <!-- Styles definiert in ./Ressources/Styles.xaml -->
            <Label
                Text="Hello, Hamster-World!"
                Style="{StaticResource Headline}"
                SemanticProperties.HeadingLevel="Level1" />

            <Label
                Text="Welcome to &#10;.NET Multi-platform App UI"
                Style="{StaticResource SubHeadline}"
                SemanticProperties.HeadingLevel="Level2"
                SemanticProperties.Description="Welcome to dot net Multi platform App U I" />
            <!-- 
                "x:Name" ist der Name, mit dem man über den C# Code auf ein Element
                    zugreifen kann. Wird im Button verwendet um den Textinhalt auf die
                    inkrementierte Zahl zu setzen.
                Die meisten UI-Elemente haben unterschiedliche Events, wie das
                "Clicked" Event im Button. Damit lässt sich eine C#-Methode ausführen,
                wenn der User mit dem UI-Element interagiert.
                    Einige dieser Events haben Parameter, welche übergeben werden können,
                    mehr dazu später.
            -->
            <Button
                x:Name="CounterBtn"
                Text="Click me" 
                SemanticProperties.Hint="Counts the number of times you click"
                Clicked="OnCounterClicked"
                HorizontalOptions="Fill" />
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>
