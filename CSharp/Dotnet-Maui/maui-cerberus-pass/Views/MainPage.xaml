<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="maui_cerberus_pass.Views.MainPage"
             xmlns:viewmodels="clr-namespace:maui_cerberus_pass.ViewModels"
             xmlns:pwtoolkit="clr-namespace:password_manager_toolkit;assembly=password-manager-toolkit"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="viewmodels:MainViewModel"
             Title="{Binding Title}">
    <Grid
        Margin="15,15,5,15"
        ColumnSpacing="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <SearchBar x:Name="searchBar"
                   Placeholder="github"
                   FontSize="Small"
                   SearchCommand="{Binding SearchCommand}"
                   SearchCommandParameter="{Binding Text, Source={x:Reference searchBar}}"
                   >
            <!-- Implementierung der Suche über Command und Änderung des Command-Triggers
            der folgende Code funktioniert nur, wenn vorher das CommunityToolkit.Maui installiert wurde.
            https://learn.microsoft.com/en-us/dotnet/communitytoolkit/maui/get-started?tabs=CommunityToolkitMaui 
            
            EventToCommandBehavior kann auf den meisten MAUI-Controls verwendet werden, um einen Command,
            auf welche wir in MVVM angewiesen sind, auf ein gewisses Event zu binden eg. TextChanged
            Command und CommandParameter können 1:1 aus der SearchBar übernommen werden.
            Für EventName können alle regulären Events verwendet werden, welche auf der Maui-Control (eg. SearchBar) existieren
            -->
            <SearchBar.Behaviors>
                <toolkit:EventToCommandBehavior 
                    EventName="TextChanged"
                    BindingContext="{Binding Path=BindingContext, Source={x:Reference searchBar}, x:DataType=SearchBar}"
                    Command="{Binding SearchCommand}"
                    CommandParameter="{Binding Text, Source={x:Reference searchBar}}"/>
            </SearchBar.Behaviors>
        </SearchBar>
        <Button
            Grid.Column="1"
            Text="Add"
            Command="{Binding GoToNewEntryCommand}"/>
        <CollectionView ItemsSource="{Binding FilteredEntries}"
                        Margin="0, 10, 0, 0"
                        Grid.Row="1"
                        Grid.ColumnSpan="2">
            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Vertical"
                                       ItemSpacing="2"/>
            </CollectionView.ItemsLayout>
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="{x:Type pwtoolkit:PasswordEntry}">
                    <Grid>
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MainViewModel}}, Path=GoToDetailsCommand}"
                                                  CommandParameter="{Binding .}"
                                                  NumberOfTapsRequired="1"/>
                            <!--<TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MainViewModel}}, Path=CopyPasswordToClipboardCommand}"
                                                  CommandParameter="{Binding .}"
                                                  NumberOfTapsRequired="2"/>-->

                        </Grid.GestureRecognizers>
                        <Border
                            Stroke="{StaticResource PrimaryDark}"
                            StrokeThickness="4"
                            StrokeShape="RoundRectangle 7"
                            Margin="0,0,15,0">
                            <Grid Padding="10"
                                  RowDefinitions="auto, auto"
                                  ColumnDefinitions="*, auto">
                                <Label Text="{Binding Title}"
                                       FontSize="Small"
                                       TextColor="LightGray" />
                                <Label Text="{Binding Login}"
                                       FontSize="Medium"
                                       Grid.Row="1"/>
                                <Button Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MainViewModel}}, Path=CopyPasswordToClipboardCommand}"
                                        CommandParameter="{Binding .}"
                                        Grid.RowSpan="2"
                                        Grid.Column="1"
                                        Text="Copy"/>
                            </Grid>
                        </Border>
                    </Grid>

                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

    </Grid>
</ContentPage>
